{"version":3,"file":"nft.js","sources":["../node_modules/near-sdk-js/lib/types/vm_types.js","../node_modules/near-sdk-js/lib/utils.js","../node_modules/@scure/base/lib/esm/index.js","../node_modules/near-sdk-js/lib/types/public_key.js","../node_modules/near-sdk-js/lib/api.js","../node_modules/near-sdk-js/lib/near-bindgen.js","../node_modules/near-sdk-js/lib/collections/lookup-map.js","../src/nft.ts"],"sourcesContent":["export var PromiseResult;\n(function (PromiseResult) {\n    PromiseResult[PromiseResult[\"NotReady\"] = 0] = \"NotReady\";\n    PromiseResult[PromiseResult[\"Successful\"] = 1] = \"Successful\";\n    PromiseResult[PromiseResult[\"Failed\"] = 2] = \"Failed\";\n})(PromiseResult || (PromiseResult = {}));\nexport var PromiseError;\n(function (PromiseError) {\n    PromiseError[PromiseError[\"Failed\"] = 0] = \"Failed\";\n    PromiseError[PromiseError[\"NotReady\"] = 1] = \"NotReady\";\n})(PromiseError || (PromiseError = {}));\n","export function u8ArrayToBytes(array) {\n    let ret = \"\";\n    for (let e of array) {\n        ret += String.fromCharCode(e);\n    }\n    return ret;\n}\n// TODO this function is a bit broken and the type can't be string\n// TODO for more info: https://github.com/near/near-sdk-js/issues/78\nexport function bytesToU8Array(bytes) {\n    let ret = new Uint8Array(bytes.length);\n    for (let i = 0; i < bytes.length; i++) {\n        ret[i] = bytes.charCodeAt(i);\n    }\n    return ret;\n}\nexport function bytes(strOrU8Array) {\n    if (typeof strOrU8Array == \"string\") {\n        return checkStringIsBytes(strOrU8Array);\n    }\n    else if (strOrU8Array instanceof Uint8Array) {\n        return u8ArrayToBytes(strOrU8Array);\n    }\n    throw new Error(\"bytes: expected string or Uint8Array\");\n}\nfunction checkStringIsBytes(str) {\n    for (let i = 0; i < str.length; i++) {\n        if (str.charCodeAt(i) > 255) {\n            throw new Error(`string ${str} at index ${i}: ${str[i]} is not a valid byte`);\n        }\n    }\n    return str;\n}\nexport function assert(b, str) {\n    if (b) {\n        return;\n    }\n    else {\n        throw Error(\"assertion failed: \" + str);\n    }\n}\n","/*! scure-base - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nexport function assertNumber(n) {\n    if (!Number.isSafeInteger(n))\n        throw new Error(`Wrong integer: ${n}`);\n}\nfunction chain(...args) {\n    const wrap = (a, b) => (c) => a(b(c));\n    const encode = Array.from(args)\n        .reverse()\n        .reduce((acc, i) => (acc ? wrap(acc, i.encode) : i.encode), undefined);\n    const decode = args.reduce((acc, i) => (acc ? wrap(acc, i.decode) : i.decode), undefined);\n    return { encode, decode };\n}\nfunction alphabet(alphabet) {\n    return {\n        encode: (digits) => {\n            if (!Array.isArray(digits) || (digits.length && typeof digits[0] !== 'number'))\n                throw new Error('alphabet.encode input should be an array of numbers');\n            return digits.map((i) => {\n                assertNumber(i);\n                if (i < 0 || i >= alphabet.length)\n                    throw new Error(`Digit index outside alphabet: ${i} (alphabet: ${alphabet.length})`);\n                return alphabet[i];\n            });\n        },\n        decode: (input) => {\n            if (!Array.isArray(input) || (input.length && typeof input[0] !== 'string'))\n                throw new Error('alphabet.decode input should be array of strings');\n            return input.map((letter) => {\n                if (typeof letter !== 'string')\n                    throw new Error(`alphabet.decode: not string element=${letter}`);\n                const index = alphabet.indexOf(letter);\n                if (index === -1)\n                    throw new Error(`Unknown letter: \"${letter}\". Allowed: ${alphabet}`);\n                return index;\n            });\n        },\n    };\n}\nfunction join(separator = '') {\n    if (typeof separator !== 'string')\n        throw new Error('join separator should be string');\n    return {\n        encode: (from) => {\n            if (!Array.isArray(from) || (from.length && typeof from[0] !== 'string'))\n                throw new Error('join.encode input should be array of strings');\n            for (let i of from)\n                if (typeof i !== 'string')\n                    throw new Error(`join.encode: non-string input=${i}`);\n            return from.join(separator);\n        },\n        decode: (to) => {\n            if (typeof to !== 'string')\n                throw new Error('join.decode input should be string');\n            return to.split(separator);\n        },\n    };\n}\nfunction padding(bits, chr = '=') {\n    assertNumber(bits);\n    if (typeof chr !== 'string')\n        throw new Error('padding chr should be string');\n    return {\n        encode(data) {\n            if (!Array.isArray(data) || (data.length && typeof data[0] !== 'string'))\n                throw new Error('padding.encode input should be array of strings');\n            for (let i of data)\n                if (typeof i !== 'string')\n                    throw new Error(`padding.encode: non-string input=${i}`);\n            while ((data.length * bits) % 8)\n                data.push(chr);\n            return data;\n        },\n        decode(input) {\n            if (!Array.isArray(input) || (input.length && typeof input[0] !== 'string'))\n                throw new Error('padding.encode input should be array of strings');\n            for (let i of input)\n                if (typeof i !== 'string')\n                    throw new Error(`padding.decode: non-string input=${i}`);\n            let end = input.length;\n            if ((end * bits) % 8)\n                throw new Error('Invalid padding: string should have whole number of bytes');\n            for (; end > 0 && input[end - 1] === chr; end--) {\n                if (!(((end - 1) * bits) % 8))\n                    throw new Error('Invalid padding: string has too much padding');\n            }\n            return input.slice(0, end);\n        },\n    };\n}\nfunction normalize(fn) {\n    if (typeof fn !== 'function')\n        throw new Error('normalize fn should be function');\n    return { encode: (from) => from, decode: (to) => fn(to) };\n}\nfunction convertRadix(data, from, to) {\n    if (from < 2)\n        throw new Error(`convertRadix: wrong from=${from}, base cannot be less than 2`);\n    if (to < 2)\n        throw new Error(`convertRadix: wrong to=${to}, base cannot be less than 2`);\n    if (!Array.isArray(data))\n        throw new Error('convertRadix: data should be array');\n    if (!data.length)\n        return [];\n    let pos = 0;\n    const res = [];\n    const digits = Array.from(data);\n    digits.forEach((d) => {\n        assertNumber(d);\n        if (d < 0 || d >= from)\n            throw new Error(`Wrong integer: ${d}`);\n    });\n    while (true) {\n        let carry = 0;\n        let done = true;\n        for (let i = pos; i < digits.length; i++) {\n            const digit = digits[i];\n            const digitBase = from * carry + digit;\n            if (!Number.isSafeInteger(digitBase) ||\n                (from * carry) / from !== carry ||\n                digitBase - digit !== from * carry) {\n                throw new Error('convertRadix: carry overflow');\n            }\n            carry = digitBase % to;\n            digits[i] = Math.floor(digitBase / to);\n            if (!Number.isSafeInteger(digits[i]) || digits[i] * to + carry !== digitBase)\n                throw new Error('convertRadix: carry overflow');\n            if (!done)\n                continue;\n            else if (!digits[i])\n                pos = i;\n            else\n                done = false;\n        }\n        res.push(carry);\n        if (done)\n            break;\n    }\n    for (let i = 0; i < data.length - 1 && data[i] === 0; i++)\n        res.push(0);\n    return res.reverse();\n}\nconst gcd = (a, b) => (!b ? a : gcd(b, a % b));\nconst radix2carry = (from, to) => from + (to - gcd(from, to));\nfunction convertRadix2(data, from, to, padding) {\n    if (!Array.isArray(data))\n        throw new Error('convertRadix2: data should be array');\n    if (from <= 0 || from > 32)\n        throw new Error(`convertRadix2: wrong from=${from}`);\n    if (to <= 0 || to > 32)\n        throw new Error(`convertRadix2: wrong to=${to}`);\n    if (radix2carry(from, to) > 32) {\n        throw new Error(`convertRadix2: carry overflow from=${from} to=${to} carryBits=${radix2carry(from, to)}`);\n    }\n    let carry = 0;\n    let pos = 0;\n    const mask = 2 ** to - 1;\n    const res = [];\n    for (const n of data) {\n        assertNumber(n);\n        if (n >= 2 ** from)\n            throw new Error(`convertRadix2: invalid data word=${n} from=${from}`);\n        carry = (carry << from) | n;\n        if (pos + from > 32)\n            throw new Error(`convertRadix2: carry overflow pos=${pos} from=${from}`);\n        pos += from;\n        for (; pos >= to; pos -= to)\n            res.push(((carry >> (pos - to)) & mask) >>> 0);\n        carry &= 2 ** pos - 1;\n    }\n    carry = (carry << (to - pos)) & mask;\n    if (!padding && pos >= from)\n        throw new Error('Excess padding');\n    if (!padding && carry)\n        throw new Error(`Non-zero padding: ${carry}`);\n    if (padding && pos > 0)\n        res.push(carry >>> 0);\n    return res;\n}\nfunction radix(num) {\n    assertNumber(num);\n    return {\n        encode: (bytes) => {\n            if (!(bytes instanceof Uint8Array))\n                throw new Error('radix.encode input should be Uint8Array');\n            return convertRadix(Array.from(bytes), 2 ** 8, num);\n        },\n        decode: (digits) => {\n            if (!Array.isArray(digits) || (digits.length && typeof digits[0] !== 'number'))\n                throw new Error('radix.decode input should be array of strings');\n            return Uint8Array.from(convertRadix(digits, num, 2 ** 8));\n        },\n    };\n}\nfunction radix2(bits, revPadding = false) {\n    assertNumber(bits);\n    if (bits <= 0 || bits > 32)\n        throw new Error('radix2: bits should be in (0..32]');\n    if (radix2carry(8, bits) > 32 || radix2carry(bits, 8) > 32)\n        throw new Error('radix2: carry overflow');\n    return {\n        encode: (bytes) => {\n            if (!(bytes instanceof Uint8Array))\n                throw new Error('radix2.encode input should be Uint8Array');\n            return convertRadix2(Array.from(bytes), 8, bits, !revPadding);\n        },\n        decode: (digits) => {\n            if (!Array.isArray(digits) || (digits.length && typeof digits[0] !== 'number'))\n                throw new Error('radix2.decode input should be array of strings');\n            return Uint8Array.from(convertRadix2(digits, bits, 8, revPadding));\n        },\n    };\n}\nfunction unsafeWrapper(fn) {\n    if (typeof fn !== 'function')\n        throw new Error('unsafeWrapper fn should be function');\n    return function (...args) {\n        try {\n            return fn.apply(null, args);\n        }\n        catch (e) { }\n    };\n}\nfunction checksum(len, fn) {\n    assertNumber(len);\n    if (typeof fn !== 'function')\n        throw new Error('checksum fn should be function');\n    return {\n        encode(data) {\n            if (!(data instanceof Uint8Array))\n                throw new Error('checksum.encode: input should be Uint8Array');\n            const checksum = fn(data).slice(0, len);\n            const res = new Uint8Array(data.length + len);\n            res.set(data);\n            res.set(checksum, data.length);\n            return res;\n        },\n        decode(data) {\n            if (!(data instanceof Uint8Array))\n                throw new Error('checksum.decode: input should be Uint8Array');\n            const payload = data.slice(0, -len);\n            const newChecksum = fn(payload).slice(0, len);\n            const oldChecksum = data.slice(-len);\n            for (let i = 0; i < len; i++)\n                if (newChecksum[i] !== oldChecksum[i])\n                    throw new Error('Invalid checksum');\n            return payload;\n        },\n    };\n}\nexport const utils = { alphabet, chain, checksum, radix, radix2, join, padding };\nexport const base16 = chain(radix2(4), alphabet('0123456789ABCDEF'), join(''));\nexport const base32 = chain(radix2(5), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZ234567'), padding(5), join(''));\nexport const base32hex = chain(radix2(5), alphabet('0123456789ABCDEFGHIJKLMNOPQRSTUV'), padding(5), join(''));\nexport const base32crockford = chain(radix2(5), alphabet('0123456789ABCDEFGHJKMNPQRSTVWXYZ'), join(''), normalize((s) => s.toUpperCase().replace(/O/g, '0').replace(/[IL]/g, '1')));\nexport const base64 = chain(radix2(6), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'), padding(6), join(''));\nexport const base64url = chain(radix2(6), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_'), padding(6), join(''));\nconst genBase58 = (abc) => chain(radix(58), alphabet(abc), join(''));\nexport const base58 = genBase58('123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz');\nexport const base58flickr = genBase58('123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ');\nexport const base58xrp = genBase58('rpshnaf39wBUDNEGHJKLM4PQRST7VWXYZ2bcdeCg65jkm8oFqi1tuvAxyz');\nconst XMR_BLOCK_LEN = [0, 2, 3, 5, 6, 7, 9, 10, 11];\nexport const base58xmr = {\n    encode(data) {\n        let res = '';\n        for (let i = 0; i < data.length; i += 8) {\n            const block = data.subarray(i, i + 8);\n            res += base58.encode(block).padStart(XMR_BLOCK_LEN[block.length], '1');\n        }\n        return res;\n    },\n    decode(str) {\n        let res = [];\n        for (let i = 0; i < str.length; i += 11) {\n            const slice = str.slice(i, i + 11);\n            const blockLen = XMR_BLOCK_LEN.indexOf(slice.length);\n            const block = base58.decode(slice);\n            for (let j = 0; j < block.length - blockLen; j++) {\n                if (block[j] !== 0)\n                    throw new Error('base58xmr: wrong padding');\n            }\n            res = res.concat(Array.from(block.slice(block.length - blockLen)));\n        }\n        return Uint8Array.from(res);\n    },\n};\nexport const base58check = (sha256) => chain(checksum(4, (data) => sha256(sha256(data))), base58);\nconst BECH_ALPHABET = chain(alphabet('qpzry9x8gf2tvdw0s3jn54khce6mua7l'), join(''));\nconst POLYMOD_GENERATORS = [0x3b6a57b2, 0x26508e6d, 0x1ea119fa, 0x3d4233dd, 0x2a1462b3];\nfunction bech32Polymod(pre) {\n    const b = pre >> 25;\n    let chk = (pre & 0x1ffffff) << 5;\n    for (let i = 0; i < POLYMOD_GENERATORS.length; i++) {\n        if (((b >> i) & 1) === 1)\n            chk ^= POLYMOD_GENERATORS[i];\n    }\n    return chk;\n}\nfunction bechChecksum(prefix, words, encodingConst = 1) {\n    const len = prefix.length;\n    let chk = 1;\n    for (let i = 0; i < len; i++) {\n        const c = prefix.charCodeAt(i);\n        if (c < 33 || c > 126)\n            throw new Error(`Invalid prefix (${prefix})`);\n        chk = bech32Polymod(chk) ^ (c >> 5);\n    }\n    chk = bech32Polymod(chk);\n    for (let i = 0; i < len; i++)\n        chk = bech32Polymod(chk) ^ (prefix.charCodeAt(i) & 0x1f);\n    for (let v of words)\n        chk = bech32Polymod(chk) ^ v;\n    for (let i = 0; i < 6; i++)\n        chk = bech32Polymod(chk);\n    chk ^= encodingConst;\n    return BECH_ALPHABET.encode(convertRadix2([chk % 2 ** 30], 30, 5, false));\n}\nfunction genBech32(encoding) {\n    const ENCODING_CONST = encoding === 'bech32' ? 1 : 0x2bc830a3;\n    const _words = radix2(5);\n    const fromWords = _words.decode;\n    const toWords = _words.encode;\n    const fromWordsUnsafe = unsafeWrapper(fromWords);\n    function encode(prefix, words, limit = 90) {\n        if (typeof prefix !== 'string')\n            throw new Error(`bech32.encode prefix should be string, not ${typeof prefix}`);\n        if (!Array.isArray(words) || (words.length && typeof words[0] !== 'number'))\n            throw new Error(`bech32.encode words should be array of numbers, not ${typeof words}`);\n        const actualLength = prefix.length + 7 + words.length;\n        if (limit !== false && actualLength > limit)\n            throw new TypeError(`Length ${actualLength} exceeds limit ${limit}`);\n        prefix = prefix.toLowerCase();\n        return `${prefix}1${BECH_ALPHABET.encode(words)}${bechChecksum(prefix, words, ENCODING_CONST)}`;\n    }\n    function decode(str, limit = 90) {\n        if (typeof str !== 'string')\n            throw new Error(`bech32.decode input should be string, not ${typeof str}`);\n        if (str.length < 8 || (limit !== false && str.length > limit))\n            throw new TypeError(`Wrong string length: ${str.length} (${str}). Expected (8..${limit})`);\n        const lowered = str.toLowerCase();\n        if (str !== lowered && str !== str.toUpperCase())\n            throw new Error(`String must be lowercase or uppercase`);\n        str = lowered;\n        const sepIndex = str.lastIndexOf('1');\n        if (sepIndex === 0 || sepIndex === -1)\n            throw new Error(`Letter \"1\" must be present between prefix and data only`);\n        const prefix = str.slice(0, sepIndex);\n        const _words = str.slice(sepIndex + 1);\n        if (_words.length < 6)\n            throw new Error('Data must be at least 6 characters long');\n        const words = BECH_ALPHABET.decode(_words).slice(0, -6);\n        const sum = bechChecksum(prefix, words, ENCODING_CONST);\n        if (!_words.endsWith(sum))\n            throw new Error(`Invalid checksum in ${str}: expected \"${sum}\"`);\n        return { prefix, words };\n    }\n    const decodeUnsafe = unsafeWrapper(decode);\n    function decodeToBytes(str) {\n        const { prefix, words } = decode(str, false);\n        return { prefix, words, bytes: fromWords(words) };\n    }\n    return { encode, decode, decodeToBytes, decodeUnsafe, fromWords, fromWordsUnsafe, toWords };\n}\nexport const bech32 = genBech32('bech32');\nexport const bech32m = genBech32('bech32m');\nexport const utf8 = {\n    encode: (data) => new TextDecoder().decode(data),\n    decode: (str) => new TextEncoder().encode(str),\n};\nexport const hex = chain(radix2(4), alphabet('0123456789abcdef'), join(''), normalize((s) => {\n    if (typeof s !== 'string' || s.length % 2)\n        throw new TypeError(`hex.decode: expected string, got ${typeof s} with length ${s.length}`);\n    return s.toLowerCase();\n}));\nconst CODERS = {\n    utf8, hex, base16, base32, base64, base64url, base58, base58xmr\n};\nconst coderTypeError = `Invalid encoding type. Available types: ${Object.keys(CODERS).join(', ')}`;\nexport const bytesToString = (type, bytes) => {\n    if (typeof type !== 'string' || !CODERS.hasOwnProperty(type))\n        throw new TypeError(coderTypeError);\n    if (!(bytes instanceof Uint8Array))\n        throw new TypeError('bytesToString() expects Uint8Array');\n    return CODERS[type].encode(bytes);\n};\nexport const str = bytesToString;\nexport const stringToBytes = (type, str) => {\n    if (!CODERS.hasOwnProperty(type))\n        throw new TypeError(coderTypeError);\n    if (typeof str !== 'string')\n        throw new TypeError('stringToBytes() expects string');\n    return CODERS[type].decode(str);\n};\nexport const bytes = stringToBytes;\n","import { bytes } from \"../utils\";\nimport { base58 } from '@scure/base';\nexport var CurveType;\n(function (CurveType) {\n    CurveType[CurveType[\"ED25519\"] = 0] = \"ED25519\";\n    CurveType[CurveType[\"SECP256K1\"] = 1] = \"SECP256K1\";\n})(CurveType || (CurveType = {}));\nfunction data_len(c) {\n    switch (c) {\n        case CurveType.ED25519:\n            return 32;\n        case CurveType.SECP256K1:\n            return 64;\n        default:\n            throw new UnknownCurve();\n    }\n}\nfunction split_key_type_data(value) {\n    let idx = value.indexOf(\":\");\n    if (idx >= 0) {\n        return [curveTypeFromStr(value.substring(0, idx)), value.substring(idx + 1)];\n    }\n    else {\n        return [CurveType.ED25519, value];\n    }\n}\nexport function curveTypeFromStr(value) {\n    switch (value) {\n        case \"ed25519\":\n            return CurveType.ED25519;\n        case \"secp256k1\":\n            return CurveType.SECP256K1;\n        default:\n            throw new UnknownCurve();\n    }\n}\nexport class ParsePublicKeyError extends Error {\n}\nexport class InvalidLengthError extends ParsePublicKeyError {\n    constructor(length) {\n        super(`Invalid length: ${length}`);\n        this.length = length;\n    }\n}\nexport class Base58Error extends ParsePublicKeyError {\n    constructor(error) {\n        super(`Base58 error: ${error}`);\n        this.error = error;\n    }\n}\nexport class UnknownCurve extends ParsePublicKeyError {\n    constructor() {\n        super(\"Unknown curve\");\n    }\n}\nexport class PublicKey {\n    constructor(data) {\n        this.data = data;\n        let curve_type = data.charCodeAt(0);\n        let curve_len = data_len(curve_type);\n        if (data.length != curve_len + 1) {\n            throw new InvalidLengthError(data.length);\n        }\n        this.data = data;\n    }\n    curveType() {\n        return this.data.charCodeAt(0);\n    }\n    static fromString(s) {\n        let [curve, key_data] = split_key_type_data(s);\n        let data;\n        try {\n            data = bytes(base58.decode(key_data));\n        }\n        catch (err) {\n            throw new Base58Error(err.message);\n        }\n        return new PublicKey(String.fromCharCode(curve) + data);\n    }\n}\n","import { PromiseResult } from \"./types\";\nconst U64_MAX = 2n ** 64n - 1n;\nconst EVICTED_REGISTER = U64_MAX - 1n;\nexport function log(...params) {\n    env.log(`${params\n        .map(x => x === undefined ? 'undefined' : x) // Stringify undefined\n        .map(x => typeof (x) === 'object' ? JSON.stringify(x) : x) // Convert Objects to strings\n        .join(' ')}` // Convert to string\n    );\n}\nexport function signerAccountId() {\n    env.signer_account_id(0);\n    return env.read_register(0);\n}\nexport function signerAccountPk() {\n    env.signer_account_pk(0);\n    return env.read_register(0);\n}\nexport function predecessorAccountId() {\n    env.predecessor_account_id(0);\n    return env.read_register(0);\n}\nexport function blockIndex() {\n    return env.block_index();\n}\nexport function blockHeight() {\n    return blockIndex();\n}\nexport function blockTimestamp() {\n    return env.block_timestamp();\n}\nexport function epochHeight() {\n    return env.epoch_height();\n}\nexport function attachedDeposit() {\n    return env.attached_deposit();\n}\nexport function prepaidGas() {\n    return env.prepaid_gas();\n}\nexport function usedGas() {\n    return env.used_gas();\n}\nexport function randomSeed() {\n    env.random_seed(0);\n    return env.read_register(0);\n}\nexport function sha256(value) {\n    env.sha256(value, 0);\n    return env.read_register(0);\n}\nexport function keccak256(value) {\n    env.keccak256(value, 0);\n    return env.read_register(0);\n}\nexport function keccak512(value) {\n    env.keccak512(value, 0);\n    return env.read_register(0);\n}\nexport function ripemd160(value) {\n    env.ripemd160(value, 0);\n    return env.read_register(0);\n}\nexport function ecrecover(hash, sig, v, malleabilityFlag) {\n    let ret = env.ecrecover(hash, sig, v, malleabilityFlag, 0);\n    if (ret === 0n) {\n        return null;\n    }\n    return env.read_register(0);\n}\n// NOTE: \"env.panic(msg)\" is not exported, use \"throw Error(msg)\" instead\nexport function panicUtf8(msg) {\n    env.panic_utf8(msg);\n}\nexport function logUtf8(msg) {\n    env.log_utf8(msg);\n}\nexport function logUtf16(msg) {\n    env.log_utf16(msg);\n}\nexport function storageRead(key) {\n    let ret = env.storage_read(key, 0);\n    if (ret === 1n) {\n        return env.read_register(0);\n    }\n    else {\n        return null;\n    }\n}\nexport function storageHasKey(key) {\n    let ret = env.storage_has_key(key);\n    if (ret === 1n) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nexport function validatorStake(accountId) {\n    return env.validator_stake(accountId);\n}\nexport function validatorTotalStake() {\n    return env.validator_total_stake();\n}\nexport function altBn128G1Multiexp(value) {\n    env.alt_bn128_g1_multiexp(value, 0);\n    return env.read_register(0);\n}\nexport function altBn128G1Sum(value) {\n    env.alt_bn128_g1_sum(value, 0);\n    return env.read_register(0);\n}\nexport function altBn128PairingCheck(value) {\n    let ret = env.alt_bn128_pairing_check(value);\n    if (ret === 1n) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nexport function storageGetEvicted() {\n    return env.read_register(EVICTED_REGISTER);\n}\nexport function currentAccountId() {\n    env.current_account_id(0);\n    return env.read_register(0);\n}\nexport function input() {\n    env.input(0);\n    return env.read_register(0);\n}\nexport function storageUsage() {\n    return env.storage_usage();\n}\nexport function accountBalance() {\n    return env.account_balance();\n}\nexport function accountLockedBalance() {\n    return env.account_locked_balance();\n}\nexport function valueReturn(value) {\n    env.value_return(value);\n}\nexport function promiseCreate(accountId, methodName, args, amount, gas) {\n    return env.promise_create(accountId, methodName, args, amount, gas);\n}\nexport function promiseThen(promiseIndex, accountId, methodName, args, amount, gas) {\n    return env.promise_then(promiseIndex, accountId, methodName, args, amount, gas);\n}\nexport function promiseAnd(...promiseIndex) {\n    return env.promise_and(...promiseIndex);\n}\nexport function promiseBatchCreate(accountId) {\n    return env.promise_batch_create(accountId);\n}\nexport function promiseBatchThen(promiseIndex, accountId) {\n    return env.promise_batch_then(promiseIndex, accountId);\n}\nexport function promiseBatchActionCreateAccount(promiseIndex) {\n    env.promise_batch_action_create_account(promiseIndex);\n}\nexport function promiseBatchActionDeployContract(promiseIndex, code) {\n    env.promise_batch_action_deploy_contract(promiseIndex, code);\n}\nexport function promiseBatchActionFunctionCall(promiseIndex, methodName, args, amount, gas) {\n    env.promise_batch_action_function_call(promiseIndex, methodName, args, amount, gas);\n}\nexport function promiseBatchActionTransfer(promiseIndex, amount) {\n    env.promise_batch_action_transfer(promiseIndex, amount);\n}\nexport function promiseBatchActionStake(promiseIndex, amount, publicKey) {\n    env.promise_batch_action_stake(promiseIndex, amount, publicKey);\n}\nexport function promiseBatchActionAddKeyWithFullAccess(promiseIndex, publicKey, nonce) {\n    env.promise_batch_action_add_key_with_full_access(promiseIndex, publicKey, nonce);\n}\nexport function promiseBatchActionAddKeyWithFunctionCall(promiseIndex, publicKey, nonce, allowance, receiverId, methodNames) {\n    env.promise_batch_action_add_key_with_function_call(promiseIndex, publicKey, nonce, allowance, receiverId, methodNames);\n}\nexport function promiseBatchActionDeleteKey(promiseIndex, publicKey) {\n    env.promise_batch_action_delete_key(promiseIndex, publicKey);\n}\nexport function promiseBatchActionDeleteAccount(promiseIndex, beneficiaryId) {\n    env.promise_batch_action_delete_account(promiseIndex, beneficiaryId);\n}\nexport function promiseBatchActionFunctionCallWeight(promiseIndex, methodName, args, amount, gas, weight) {\n    env.promise_batch_action_function_call_weight(promiseIndex, methodName, args, amount, gas, weight);\n}\nexport function promiseResultsCount() {\n    return env.promise_results_count();\n}\nexport function promiseResult(resultIdx) {\n    let status = env.promise_result(resultIdx, 0);\n    if (status == PromiseResult.Successful) {\n        return env.read_register(0);\n    }\n    else {\n        throw Error(`Promise result ${status == PromiseResult.Failed ? \"Failed\" :\n            status == PromiseResult.NotReady ? \"NotReady\" : status}`);\n    }\n}\nexport function promiseReturn(promiseIdx) {\n    env.promise_return(promiseIdx);\n}\nexport function storageWrite(key, value) {\n    let exist = env.storage_write(key, value, EVICTED_REGISTER);\n    if (exist === 1n) {\n        return true;\n    }\n    return false;\n}\nexport function storageRemove(key) {\n    let exist = env.storage_remove(key, EVICTED_REGISTER);\n    if (exist === 1n) {\n        return true;\n    }\n    return false;\n}\nexport function storageByteCost() {\n    return 10000000000000000000n;\n}\n","import * as near from \"./api\";\nexport function initialize({}) {\n    return function (target, key, descriptor) {\n    };\n}\nexport function call({ privateFunction = false, payableFunction = false }) {\n    return function (target, key, descriptor) {\n        const originalMethod = descriptor.value;\n        descriptor.value = function (...args) {\n            if (privateFunction && near.predecessorAccountId() !== near.currentAccountId()) {\n                throw Error(\"Function is private\");\n            }\n            if (!payableFunction && near.attachedDeposit() > BigInt(0)) {\n                throw Error(\"Function is not payable\");\n            }\n            return originalMethod.apply(this, args);\n        };\n    };\n}\nexport function view({}) {\n    return function (target, key, descriptor) {\n    };\n}\nexport function NearBindgen({ requireInit = false }) {\n    return (target) => {\n        return class extends target {\n            static _create() {\n                return new target();\n            }\n            static _getState() {\n                const rawState = near.storageRead(\"STATE\");\n                return rawState ? this._deserialize(rawState) : null;\n            }\n            static _saveToStorage(obj) {\n                near.storageWrite(\"STATE\", this._serialize(obj));\n            }\n            static _getArgs() {\n                return JSON.parse(near.input() || \"{}\");\n            }\n            static _serialize(value) {\n                return JSON.stringify(value);\n            }\n            static _deserialize(value) {\n                return JSON.parse(value);\n            }\n            static _reconstruct(classObject, plainObject) {\n                for (const item in classObject) {\n                    if (classObject[item].constructor?.deserialize !== undefined) {\n                        classObject[item] = classObject[item].constructor.deserialize(plainObject[item]);\n                    }\n                    else {\n                        classObject[item] = plainObject[item];\n                    }\n                }\n                return classObject;\n            }\n            static _requireInit() {\n                return requireInit;\n            }\n        };\n    };\n}\n","import * as near from '../api';\nexport class LookupMap {\n    constructor(keyPrefix) {\n        this.keyPrefix = keyPrefix;\n    }\n    containsKey(key) {\n        let storageKey = this.keyPrefix + JSON.stringify(key);\n        return near.storageHasKey(storageKey);\n    }\n    get(key) {\n        let storageKey = this.keyPrefix + JSON.stringify(key);\n        let raw = near.storageRead(storageKey);\n        if (raw !== null) {\n            return JSON.parse(raw);\n        }\n        return null;\n    }\n    remove(key) {\n        let storageKey = this.keyPrefix + JSON.stringify(key);\n        if (near.storageRemove(storageKey)) {\n            return JSON.parse(near.storageGetEvicted());\n        }\n        return null;\n    }\n    set(key, value) {\n        let storageKey = this.keyPrefix + JSON.stringify(key);\n        let storageValue = JSON.stringify(value);\n        if (near.storageWrite(storageKey, storageValue)) {\n            return JSON.parse(near.storageGetEvicted());\n        }\n        return null;\n    }\n    extend(objects) {\n        for (let kv of objects) {\n            this.set(kv[0], kv[1]);\n        }\n    }\n    serialize() {\n        return JSON.stringify(this);\n    }\n    // converting plain object to class object\n    static deserialize(data) {\n        return new LookupMap(data.keyPrefix);\n    }\n}\n","import {\n    NearBindgen,\n    call,\n    view,\n    initialize,\n    near,\n    LookupMap,\n    bytes,\n    assert,\n} from \"near-sdk-js\";\n\nclass Token {\n    token_id;\n    owner_id;\n    constructor(token_id, owner_id) {\n        this.token_id = token_id;\n        this.owner_id = owner_id;\n    }\n}\n\n@NearBindgen({ requireInit: true })\nclass NftContract {\n    owner_id;\n    owner_by_id;\n    constructor() {\n        this.owner_id = \"\";\n        this.owner_by_id = new LookupMap(\"a\");\n    }\n\n    @initialize({})\n    init({ owner_id, owner_by_id_prefix }) {\n        this.owner_id = owner_id;\n        this.owner_by_id = new LookupMap(owner_by_id_prefix);\n    }\n\n    internalTransfer({ sender_id, receiver_id, token_id, approval_id, memo }) {\n        let owner_id = this.owner_by_id.get(token_id);\n\n        assert(owner_id !== null, \"Token not found\");\n        assert(sender_id === owner_id, \"Sender must be the current owner\");\n        assert(owner_id !== receiver_id, \"Current and next owner must differ\");\n\n        this.owner_by_id.set(token_id, receiver_id);\n\n        return owner_id;\n    }\n\n    @call({})\n    nftTransfer({ receiver_id, token_id, approval_id, memo }) {\n        let sender_id = near.predecessorAccountId();\n        this.internalTransfer({\n            sender_id,\n            receiver_id,\n            token_id,\n            approval_id,\n            memo,\n        });\n    }\n\n    @call({})\n    nftTransferCall({ receiver_id, token_id, approval_id, memo, msg }) {\n        near.log(\n            `nftTransferCall called, receiver_id ${receiver_id}, token_id ${token_id}`\n        );\n        let sender_id = near.predecessorAccountId();\n        let old_owner_id = this.internalTransfer({\n            sender_id,\n            receiver_id,\n            token_id,\n            approval_id,\n            memo,\n        });\n\n        const promise = near.promiseBatchCreate(receiver_id);\n        near.promiseBatchActionFunctionCall(\n            promise,\n            \"nftOnTransfer\",\n            bytes(\n                JSON.stringify({\n                    senderId: sender_id,\n                    previousOwnerId: old_owner_id,\n                    tokenId: token_id,\n                    msg: msg,\n                })\n            ),\n            0,\n            30000000000000\n        );\n        near.promiseThen(\n            promise,\n            near.currentAccountId(),\n            \"_nftResolveTransfer\",\n            bytes(JSON.stringify({ sender_id, receiver_id, token_id })),\n            0,\n            30000000000000\n        );\n    }\n\n    @call({ privateFunction: true })\n    _nftResolveTransfer({ sender_id, receiver_id, token_id }) {\n        near.log(\n            `_nftResolveTransfer called, receiver_id ${receiver_id}, token_id ${token_id}`\n        );\n        const isTokenTransfered = JSON.parse(near.promiseResult(0));\n        near.log(\n            `${token_id} ${\n                isTokenTransfered ? \"was transfered\" : \"was NOT transfered\"\n            }`\n        );\n\n        if (!isTokenTransfered) {\n            near.log(`Returning ${token_id} to ${receiver_id}`);\n            const currentOwner = this.owner_by_id.get(token_id);\n            if (currentOwner === receiver_id) {\n                this.internalTransfer({\n                    sender_id: receiver_id,\n                    receiver_id: sender_id,\n                    token_id: token_id,\n                    approval_id: null,\n                    memo: null,\n                });\n                near.log(`${token_id} returned to ${sender_id}`);\n                return;\n            }\n            near.log(\n                `Failed to return ${token_id}. It was burned or not owned by ${receiver_id} now.`\n            );\n        }\n    }\n\n    @call({})\n    nftMint({ token_id, token_owner_id, token_metadata }) {\n        let sender_id = near.predecessorAccountId();\n        assert(sender_id === this.owner_id, \"Unauthorized\");\n        assert(\n            this.owner_by_id.get(token_id) === null,\n            \"Token ID must be unique\"\n        );\n\n        this.owner_by_id.set(token_id, token_owner_id);\n\n        return new Token(token_id, token_owner_id);\n    }\n\n    @view({})\n    nftToken({ token_id }) {\n        let owner_id = this.owner_by_id.get(token_id);\n        if (owner_id === null) {\n            return null;\n        }\n\n        return new Token(token_id, owner_id);\n    }\n}\n"],"names":["PromiseResult","PromiseError","u8ArrayToBytes","array","ret","e","String","fromCharCode","bytes","strOrU8Array","checkStringIsBytes","Uint8Array","Error","str","i","length","charCodeAt","assert","b","assertNumber","n","Number","isSafeInteger","chain","args","wrap","a","c","encode","Array","from","reverse","reduce","acc","undefined","decode","alphabet","digits","isArray","map","input","letter","index","indexOf","join","separator","to","split","padding","bits","chr","data","push","end","slice","normalize","fn","convertRadix","pos","res","forEach","d","carry","done","digit","digitBase","Math","floor","gcd","radix2carry","convertRadix2","mask","radix","num","radix2","revPadding","unsafeWrapper","apply","base16","base32","s","toUpperCase","replace","base64","base64url","genBase58","abc","base58","XMR_BLOCK_LEN","base58xmr","block","subarray","padStart","blockLen","j","concat","BECH_ALPHABET","POLYMOD_GENERATORS","bech32Polymod","pre","chk","bechChecksum","prefix","words","encodingConst","len","v","genBech32","encoding","ENCODING_CONST","_words","fromWords","toWords","fromWordsUnsafe","limit","actualLength","TypeError","toLowerCase","lowered","sepIndex","lastIndexOf","sum","endsWith","decodeUnsafe","decodeToBytes","utf8","TextDecoder","TextEncoder","hex","CODERS","Object","keys","CurveType","U64_MAX","EVICTED_REGISTER","log","params","env","x","JSON","stringify","predecessorAccountId","predecessor_account_id","read_register","attachedDeposit","attached_deposit","storageRead","key","storage_read","storageHasKey","storage_has_key","storageGetEvicted","currentAccountId","current_account_id","promiseThen","promiseIndex","accountId","methodName","amount","gas","promise_then","promiseBatchCreate","promise_batch_create","promiseBatchActionFunctionCall","promise_batch_action_function_call","promiseResult","resultIdx","status","promise_result","Successful","Failed","NotReady","storageWrite","value","exist","storage_write","storageRemove","storage_remove","initialize","target","descriptor","call","privateFunction","payableFunction","originalMethod","near","BigInt","view","NearBindgen","requireInit","_create","_getState","rawState","_deserialize","_saveToStorage","obj","_serialize","_getArgs","parse","_reconstruct","classObject","plainObject","item","constructor","deserialize","_requireInit","LookupMap","keyPrefix","containsKey","storageKey","get","raw","remove","set","storageValue","extend","objects","kv","serialize","Token","token_id","owner_id","NftContract","owner_by_id","init","owner_by_id_prefix","internalTransfer","sender_id","receiver_id","approval_id","memo","nftTransfer","nftTransferCall","msg","old_owner_id","promise","senderId","previousOwnerId","tokenId","_nftResolveTransfer","isTokenTransfered","currentOwner","nftMint","token_owner_id","token_metadata","nftToken"],"mappings":"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"}